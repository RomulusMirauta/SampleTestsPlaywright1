name: Playwright Tests

on:
  push:
    branches: [ main, preview ]
  pull_request:
    branches: [ main, preview ]
  workflow_dispatch:
    inputs:
        browser:
            type: choice
            description: Which browser engine(s) to test?
            required: true
            options:
            - all browser engines
            - chromium
            - firefox
            - webkit

jobs:
  test:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm install

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      # Validate required secrets are available in the runner environment.
      - name: Validate required environment variables
        run: |
          node ./scripts/validate-env.js
        # If secrets are not configured in the repository settings, this will fail and
        # stop the job with a helpful message. Configure the following secrets in
        # your repository or organization settings: DB_USER, DB_PASSWORD, DB_SERVER, DB_NAME,
        # TEST_ADMIN_USERNAME, TEST_ADMIN_PASSWORD, TEST_USER_DRUGS_USERNAME, TEST_USER_DRUGS_PASSWORD,
        # TEST_USER_PATIENTS_USERNAME, TEST_USER_PATIENTS_PASSWORD

      - name: Check if platform is available
        id: check_platform
        run: |
          if curl --fail --silent http://localhost:3001/; then
            echo "platform_available=true" >> $GITHUB_OUTPUT
          else
            echo "platform_available=false" >> $GITHUB_OUTPUT
          fi

      - name: Run Playwright tests
        if: steps.check_platform.outputs.platform_available == 'true'
        run: npx playwright test --project ${{ github.event.inputs.browser && github.event.inputs.browser != 'all browser engines' && github.event.inputs.browser || 'chromium' }}

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30




      # Uncomment and configure the following if you need a SQL Server service for integration tests
      # - name: Set up SQL Server
      #   uses: azure/sql-action@v2
      #   with:
      #     connection-string: ${{ secrets.SQL_CONNECTION_STRING }}
      #     # Add additional setup as needed
